// Program that combines data in an Excel Spreadsheet
main () {
    
    // First read all data as structures
    name = "Alldata";
    readDataFromSpreadSheet ( "DataFiles/ExcelTestCombined.csv" , name );
    //removeDuplicates (inp: dataIn = name, out: dataOut = dataUnique )
    
    fillData (inp: dataIn = name, out: dataOut = dataOut ) ;
    
    fileResName = "ExcelTestResult.csv" ;
    fp = fopen ( fileResName , "w" ) ;
    writeDataToFile ( fp, "UPC1, " , "Item, " , "Descrption, " , "Price, ", "Cost, " , "Category, " , "SubCategory, " , "SubCategory2, " , "SubCategory3, " , "Vendor, " , "GR, ", "GC, ", "VR, ", "VC, ", "Total Inventory" ) ;
    
    combinedDataLength = lengthOf( dataOut ) ;
    show ( "Combined file size : " , combinedDataLength  ) ;
    for( i=0; i< combinedDataLength; i++) {
        invSum = dataOut[i].GR + dataOut[i].GC + dataOut[i].VR + dataOut[i].VC;
        if( invSum != 0 ) {
            writeDataToFile ( fp, dataOut[i].UPC1 , " , " , dataOut[i].Item , " , " , dataOut[i].Descrption , " , " , dataOut[i].Price , " , " , dataOut[i].Cost , " , " ,  dataOut[i].Category , " , " ,  dataOut[i].SubCategory , " , " ,  dataOut[i].SubCategory2 , " , " ,  dataOut[i].SubCategory3 , " , " ,  dataOut[i].Vendor, " , " ,  dataOut[i].GR , " , " ,  dataOut[i].GC , " , " ,  dataOut[i].VR , " , " ,  dataOut[i].VC, " , " , invSum ) ;
        }
    }
    closeDataFile(fp);
}
// --------------------------------------------------------------------
// Find Duplicates
removeDuplicates ( inp: dataIn, out: dataOut ) {
    size = lengthOf( dataIn ) ;
    
    count = 0;
    show ( "Records: " , size);
    
    records = 0 ;
    dataOut[records].UPC1 = 0 ;
    
    for( i = 0 ; i < size ; i++ ) {
        count++;
        if( count == 100) {
            show(i);
            count = 0;
        }
        
        if( i == 0 ) {
            addRecord = 1;
        }
        else if( dataOut[records].UPC1 != dataIn[i].UPC1 ) {
            addRecord = 1;
        }
        else {
            addRecord = 0;
        }
        
        if ( addRecord == 1) {
            if( i != 0 ) {
                records++;
            }
            
            //show("Adding new reocrd in location: ", records);
            dataOut[records].UPC1           = dataIn[i].UPC1;
            dataOut[records].Descrption     = dataIn[i].Descrption;
            dataOut[records].Price          = dataIn[i].Price;
            dataOut[records].Category       = dataIn[i].Category;
            dataOut[records].SubCategory    = dataIn[i].SubCategory;
            dataOut[records].SubCategory2   = dataIn[i].SubCategory2;
            dataOut[records].SubCategory3   = dataIn[i].SubCategory3;
            dataOut[records].Vendor         = dataIn[i].Vendor;
            dataOut[records].Item = " ";
            dataOut[records].Cost = 0;
            dataOut[records].GR = dataIn[i].GR;
            dataOut[records].GC = dataIn[i].GC;
            dataOut[records].VR = dataIn[i].VR;
            dataOut[records].VC = dataIn[i].VC;
        }
        else {
            //show("Match Found in ", i, " Updating record: ", records);
            if( dataIn[i].GR == 1 ) {
                dataOut[records].GR = dataOut[records].GR + 1;
            }
            if( dataIn[i].GC == 1 ) {
                dataOut[records].GC = dataOut[records].GC + 1;
            }
            if( dataIn[i].VR == 1 ) {
                dataOut[records].VR = dataOut[records].VR + 1;
            }
            if( dataIn[i].VC == 1 ) {
                dataOut[records].VC = dataOut[records].VC + 1;
            }
        }
    }
    show ( "Records Created: " , records);
}
// --------------------------------------------------------------------
// Fill Data
fillData ( inp: dataIn, out: dataOut ) {
    size = lengthOf( dataIn ) ;
    
    count = 0;
    additionsFound = 0;
    descriptionsReplaced = 0;
    show ( "Records: " , size);
    
    records = 0 ;
    dataOut[records].UPC1 = 0 ;
    
    for( i = 0 ; i < size ; i++ ) {
        count++;
        if( count == 100) {
            show(i);
            count = 0;
        }
        
        addRecord  = 0 ;
        matchFound = 0 ;
        if( i == 0 ) {
            addRecord = 1;
        }
        else if( ( dataOut[records].UPC1 != dataIn[i].UPC1 ) && dataIn[i].TotalInventory != 0) {
            addRecord = 1;
        }
        else if ( dataOut[records].UPC1 == dataIn[i].UPC1 ) {
            matchFound = 1;
        }
        
        if ( addRecord == 1) {
            if( i != 0 ) {
                records++;
            }
            
            //show("Adding new reocrd in location: ", records);
            dataOut[records].UPC1           = dataIn[i].UPC1;
            dataOut[records].Descrption     = dataIn[i].Descrption;
            dataOut[records].Price          = dataIn[i].Price;
            dataOut[records].Category       = dataIn[i].Category;
            dataOut[records].SubCategory    = dataIn[i].SubCategory;
            dataOut[records].SubCategory2   = dataIn[i].SubCategory2;
            dataOut[records].SubCategory3   = dataIn[i].SubCategory3;
            dataOut[records].Vendor         = dataIn[i].Vendor;
            dataOut[records].Item = " ";
            dataOut[records].Cost = " ";
            dataOut[records].GR = dataIn[i].GR;
            dataOut[records].GC = dataIn[i].GC;
            dataOut[records].VR = dataIn[i].VR;
            dataOut[records].VC = dataIn[i].VC;
        }
        else if( matchFound == 1 ) {
            dataOut[records].Item = dataIn[i].Item;
            dataOut[records].Cost = dataIn[i].Cost;
            a = dataOut[records].Cost;
            b = dataOut[records].Item;
            c = dataOut[records].UPC1;
            show("Adding ", b , ", ", a, " to UPC ", c  ) ;
            l1 = dataOut[records].Descrption  ;
            l2 = dataIn[i].Descrption  ;
            additionsFound++;
            //show("new desc ", l2 , ", ", " cur desc ", l1  ) ;
            if( l2 > l1 ) {
                descriptionsReplaced++;
                dataOut[records].Descrption = dataIn[i].Descrption;
                show("Replacing Desctription for ", records, " to ", dataOut[records].Descrption ) ;
            }
        }
    }
    show ( "Final Records Created: " , records);
    show ( "Records Added: " , additionsFound);
    show ( "Desc replaced: " , descriptionsReplaced);
}

